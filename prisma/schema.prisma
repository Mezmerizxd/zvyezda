generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_HOST")
}

enum Roles {
  USER
  DEVELOPER
  ADMIN
}

model Accounts {
  id        String     @id @default(uuid())
  email     String     @unique
  username  String     @unique
  password  String
  token     String?    @unique
  tokenExp  DateTime?
  role      Roles      @default(USER)
  avatar    String?
  biography String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  addresses Address[]
  bookings  Bookings[]
}

model HackedXboxs {
  id              String   @id @default(uuid())
  title           String
  description     String
  xboxType        String
  xboxColour      String
  motherboardType String
  serialNumber    String
  mfrDate         DateTime
  model           String
  nandSize        String
  rghVersion      String
  rghGlitchType   String
  images          String[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Discussion {
  id        String   @id @default(uuid())
  message   String
  username  String
  avatar    String?
  replyTo   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Surveillance {
  id   String @id @default(uuid())
  url  String
  name String
}

model Bookings {
  id              String   @id @default(uuid())
  date            DateTime
  price           Int
  serviceType     Int      @default(0)
  timeSlot        Int      @default(0)
  additionalNotes String   @default("")
  paid            Boolean  @default(false)
  confirmed       Boolean  @default(false)
  paymentIntentId String?
  addressId       String
  accountId       String
  account         Accounts @relation(fields: [accountId], references: [id])
  createdAt       DateTime @default(now())
}

model Address {
  id         String   @id @default(uuid())
  street     String
  city       String
  state      String
  country    String
  postalCode String
  accountId  String
  account    Accounts @relation(fields: [accountId], references: [id])
}
